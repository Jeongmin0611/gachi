<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.bitcamp.gachi.admin.MemberDaoImp">
	<select id="selectAllMember" parameterType="map" resultType="com.bitcamp.gachi.admin.MemberVO">
		select *
			from (SELECT *
        			FROM (
           				 rownum, userid, nickname, grade, username, tel, to_char(signupdate, 'yyyy-mm-dd') signupdate, 
           				 to_char(withdrawdate, 'yyyy-mm-dd') withdrawdate, deleted from member where grade='회원'
		<choose>
				<when test='withdraw==null and search==null'></when>
				<when test='withdraw!=null and search==null'>
					 and deleted='${withdraw}'
				</when>
				<when test='withdraw==null and search!=null'>
					and (username like '%${search}%' or nickname like '%${search}%' or tel like '%${search}%' or userid like '%${search}%')
				</when>
				<when test='withdraw!=null and search!=null'>
					and deleted='${withdraw}' and (username like '%${search}%' or nickname like '%${search}%' or tel like '%${search}%' or userid like '%${search}%')
				</when>
				<otherwise></otherwise>
		</choose>
		) pagetable
        			where rownum &lt;= ${endNum}
    		)
		where rownum &gt;= ${startNum};
	</select>
	<select id="countAllMember" resultType="_int">
		select count(*) from member where grade = '회원'
	</select>
	<select id="countNowMember" resultType="_int">
		select count(*) from member where deleted='회원' and grade = '회원'
	</select>
	<select id="countDeletedMember" resultType="_int">
		select count(*) from member where deleted='탈퇴' and grade = '회원'
	</select>
	
	<select id="selectMember" resultType="com.bitcamp.gachi.admin.MemberVO">
		select  userid, grade ,username, nickname, tel, to_char(birthdate, 'yyyy-mm-dd')
	  	 birthdate, gender, zipcode, addr, detailaddr, to_char(signupdate, 'yyyy-mm-dd') signupdate, to_char(withdrawdate, 'yyyy-mm-dd') withdrawdate,
	  	 deleted from member where userid = #{userid}
	</select>
	
	<update id="MemberUpdate" parameterType="com.bitcamp.gachi.admin.MemberVO"> 
		update member set username = #{username}, nickname = #{nickname} ,tel =#{tel}, gender=#{gender}, zipcode=#{zipcode}, 
		addr =#{addr},detailaddr =#{detailaddr}
		where userid = #{userid}
	</update>
	<update id="leaveMemberUpdate" parameterType="String">
		update member set deleted='탈퇴',withdrawdate=sysdate where userid =#{userid}
	</update>

	<!--   <delete id="adminMemberDelete">
		delete from member where userid =#{userid}
	</delete> -->
	<select id="dashForMember" parameterType="map" resultType="_int">
		<foreach collection="list" item="item" separator=" union all">
 			select count(*)  as newMember from member where to_char(signupdate, 'yyyy-mm') = #{item} and grade ='회원' and deleted ='회원'
		</foreach>
	</select>
	
	<select id="dashboardMember" parameterType="map" resultType="_int">		
		select count(*) cnt from member where withdrawdate is null and 
		grade ='회원' and deleted='회원'
		and to_char(signupdate, 'yyyy-mm')&gt;= #{startMonth} and to_char(signupdate, 'yyyy-mm') &lt;= #{endMonth}
	</select>
	
	<select id="dashboardCreator" parameterType="map" resultType="_int">
		select count(*) cnt from member where withdrawdate is null and 
		grade ='크리에이터' and deleted='회원'
		and to_char(signupdate, 'yyyy-mm')&gt;= #{startMonth} and to_char(signupdate, 'yyyy-mm') &lt;= #{endMonth}
	</select>
	
	<select id="dashboardAllMember" parameterType="map" resultType="_int">
		select count(*) cnt from member where withdrawdate is null and 
		deleted='회원' and grade != '관리자'
		and to_char(signupdate, 'yyyy-mm')&gt;= #{startMonth} and to_char(signupdate, 'yyyy-mm') &lt;= #{endMonth}
	</select>
	
<select id="dashForGender" parameterType="map" resultType="map">
		select gender_gb, count(*) cnt 
      from (select case when gender= lower('f') then '여자' when gender=lower('m') then '남자' end gender_gb
      from (select gender from member where withdrawdate is null and grade='회원'
            and to_char(signupdate, 'yyyy-mm')&gt;= #{startMonth} and to_char(signupdate, 'yyyy-mm')&lt;= #{endMonth}
            )
      )
    group by gender_gb
	</select>
	<select id="dashForAge" parameterType="map" resultType="map">
		SELECT age_gb, COUNT(*) cnt
	  		FROM (SELECT CASE WHEN age &lt; 10 THEN '유아'
	                    WHEN AGE &gt;= 10 AND age &lt; 20 THEN '10대'
	                    WHEN age &gt;= 20 AND age &lt; 30 THEN '20대'
	                    WHEN age &gt;= 30 AND age &lt; 40 THEN '30대'
	                    WHEN age &gt;= 40 AND age &lt; 50 THEN '40대'
	                    WHEN age &gt;= 50 AND age &lt; 60 THEN '50대'
	                    WHEN age &gt;= 60 THEN '60대이상'
	                END age_gb
	          FROM (SELECT (to_number(to_char(sysdate, 'yyyy'))-to_number(to_char(birthdate, 'yyyy'))+응가) as age
	                  FROM member where withdrawdate is null and grade ='회원' and
	                  to_char(signupdate, 'yyyy-mm')&gt;= #{startMonth} and to_char(signupdate, 'yyyy-mm')&lt;= #{endMonth}
	                )
	         	)
 		GROUP BY age_gb ORDER BY age_gb	
	</select>
	
</mapper>